version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: ar-namecard-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-ar_namecard}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongodb-init:/docker-entrypoint-initdb.d:ro
    networks:
      - ar-namecard-network
    ports:
      - "127.0.0.1:27017:27017"  # Only accessible from localhost
    command: mongod --auth
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AR Namecard API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ar-namecard-api
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      # Server Configuration
      NODE_ENV: production
      PORT: 3000
      HTTPS_PORT: 3443
      HOST: 0.0.0.0
      ENABLE_HTTPS: ${ENABLE_HTTPS:-false}
      
      # Database Configuration
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_DB_NAME:-ar_namecard}?authSource=admin
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      
      # File Upload Configuration
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      UPLOAD_DIR: uploads
      
      # CORS Configuration
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      CORS_ALLOW_ALL: ${CORS_ALLOW_ALL:-false}
      
      # SSL Configuration
      SSL_KEY_PATH: ./ssl/server.key
      SSL_CERT_PATH: ./ssl/server.crt
      
      # Firebase Configuration
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
    volumes:
      - uploads_data:/app/uploads
      - ssl_certs:/app/ssl
      - public_files:/app/public
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
    networks:
      - ar-namecard-network
    ports:
      - "${API_HTTP_PORT:-3000}:3000"
      - "${API_HTTPS_PORT:-3443}:3443"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ar-namecard.rule=Host(`${DOMAIN_NAME:-localhost}`)"
      - "traefik.http.routers.ar-namecard.tls=true"

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: ar-namecard-nginx
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ssl_certs:/etc/nginx/ssl:ro
      - uploads_data:/var/www/uploads:ro
    networks:
      - ar-namecard-network
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    profiles:
      - with-nginx

networks:
  ar-namecard-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /volume1/docker/ar-namecard/data/mongodb
  mongodb_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /volume1/docker/ar-namecard/data/mongodb-config
  uploads_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /volume1/docker/ar-namecard/uploads
  ssl_certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /volume1/docker/ar-namecard/ssl
  public_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /volume1/docker/ar-namecard/public